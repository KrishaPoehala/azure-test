// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dz3Binary.DAL;

#nullable disable

namespace dz3Binary.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dz3Binary.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2022, 3, 20, 1, 42, 18, 353, DateTimeKind.Local).AddTicks(4792),
                            Deadline = new DateTime(2022, 8, 27, 10, 9, 17, 708, DateTimeKind.Local).AddTicks(8451),
                            Description = "Aut impedit nihil cum dolores consequatur maxime.",
                            Name = "Paradigm",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2022, 2, 11, 11, 28, 16, 681, DateTimeKind.Local).AddTicks(5790),
                            Deadline = new DateTime(2022, 11, 11, 13, 56, 40, 276, DateTimeKind.Local).AddTicks(7181),
                            Description = "Id qui ullam ducimus ex ut aliquam.",
                            Name = "Mobility",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2021, 11, 18, 12, 49, 6, 588, DateTimeKind.Local).AddTicks(4401),
                            Deadline = new DateTime(2023, 1, 10, 17, 29, 28, 457, DateTimeKind.Local).AddTicks(3528),
                            Description = "Minus totam eos nam voluptas neque consectetur.",
                            Name = "Optimization",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId1")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectId1");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 10, 19, 11, 41, 56, 824, DateTimeKind.Local).AddTicks(9676),
                            Description = "Qui sit ea eaque repellat.",
                            Name = "Maudie",
                            PerformerId = 2,
                            ProjectId = 3,
                            State = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 10, 14, 7, 56, 52, 425, DateTimeKind.Local).AddTicks(7705),
                            Description = "Voluptatem nemo in fuga itaque.",
                            Name = "Leann",
                            PerformerId = 3,
                            ProjectId = 3,
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 29, 15, 44, 41, 788, DateTimeKind.Local).AddTicks(7811),
                            Description = "Aut consequatur est quia inventore.",
                            FinishedAt = new DateTime(2022, 5, 7, 12, 33, 47, 717, DateTimeKind.Local).AddTicks(8826),
                            Name = "Percival",
                            PerformerId = 2,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 12, 17, 4, 28, 10, 600, DateTimeKind.Local).AddTicks(1459),
                            Description = "Velit tempora saepe est iure.",
                            FinishedAt = new DateTime(2022, 1, 18, 17, 16, 24, 372, DateTimeKind.Local).AddTicks(2542),
                            Name = "Ethyl",
                            PerformerId = 5,
                            ProjectId = 2,
                            State = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 1, 30, 0, 35, 6, 971, DateTimeKind.Local).AddTicks(1038),
                            Description = "Sit harum sint sit laboriosam.",
                            FinishedAt = new DateTime(2022, 2, 17, 23, 36, 0, 95, DateTimeKind.Local).AddTicks(5374),
                            Name = "Lina",
                            PerformerId = 2,
                            ProjectId = 1,
                            State = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 1, 22, 21, 3, 236, DateTimeKind.Local).AddTicks(7798),
                            Description = "Quasi illo perspiciatis sit ea.",
                            Name = "Alverta",
                            PerformerId = 5,
                            ProjectId = 2,
                            State = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 26, 20, 28, 46, 872, DateTimeKind.Local).AddTicks(6515),
                            Description = "Consequatur consectetur velit odio aut.",
                            FinishedAt = new DateTime(2021, 9, 24, 17, 34, 23, 588, DateTimeKind.Local).AddTicks(9517),
                            Name = "Garnett",
                            PerformerId = 4,
                            ProjectId = 3,
                            State = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 2, 1, 4, 50, 29, 710, DateTimeKind.Local).AddTicks(1588),
                            Description = "Nam voluptas ut non sit.",
                            Name = "Magnus",
                            PerformerId = 4,
                            ProjectId = 2,
                            State = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 9, 25, 23, 5, 33, 476, DateTimeKind.Local).AddTicks(5947),
                            Description = "Aut itaque totam qui ab.",
                            FinishedAt = new DateTime(2022, 6, 19, 9, 8, 29, 720, DateTimeKind.Local).AddTicks(8091),
                            Name = "Tom",
                            PerformerId = 2,
                            ProjectId = 1,
                            State = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 2, 6, 9, 38, 6, 146, DateTimeKind.Local).AddTicks(6594),
                            Description = "Aut tenetur vel possimus non.",
                            FinishedAt = new DateTime(2022, 3, 27, 15, 50, 55, 979, DateTimeKind.Local).AddTicks(4880),
                            Name = "Alexzander",
                            PerformerId = 4,
                            ProjectId = 1,
                            State = 0
                        });
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 10, 2, 50, 15, 257, DateTimeKind.Local).AddTicks(9675),
                            Name = "Cassin - Murphy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 19, 21, 0, 31, 937, DateTimeKind.Local).AddTicks(4915),
                            Name = "Nolan - Rau"
                        });
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId1");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(2022, 6, 1, 0, 13, 19, 373, DateTimeKind.Local).AddTicks(3474),
                            Email = "Meaghan_Watsica@yahoo.com",
                            FirstName = "Anahi",
                            LastName = "Hyatt",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(2021, 8, 14, 7, 27, 41, 361, DateTimeKind.Local).AddTicks(989),
                            Email = "Colleen_Feest51@yahoo.com",
                            FirstName = "Paxton",
                            LastName = "Miller",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2021, 11, 10, 16, 55, 31, 486, DateTimeKind.Local).AddTicks(6950),
                            Email = "Cielo.Roberts@gmail.com",
                            FirstName = "Omari",
                            LastName = "Funk",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(2021, 8, 21, 11, 54, 44, 16, DateTimeKind.Local).AddTicks(7842),
                            Email = "Mallie_Bechtelar@yahoo.com",
                            FirstName = "Conrad",
                            LastName = "Lang",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(2021, 11, 24, 2, 46, 53, 295, DateTimeKind.Local).AddTicks(9520),
                            Email = "Norwood.Murazik37@hotmail.com",
                            FirstName = "Eliezer",
                            LastName = "Quitzon",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Project", b =>
                {
                    b.HasOne("dz3Binary.DAL.Entities.User", "Author")
                        .WithMany("ProjectsCreated")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("dz3Binary.DAL.Entities.Team", "Team")
                        .WithMany("Projects")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Task", b =>
                {
                    b.HasOne("dz3Binary.DAL.Entities.User", "Performer")
                        .WithMany()
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("dz3Binary.DAL.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("dz3Binary.DAL.Entities.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId1");

                    b.HasOne("dz3Binary.DAL.Entities.User", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.User", b =>
                {
                    b.HasOne("dz3Binary.DAL.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("dz3Binary.DAL.Entities.Team", null)
                        .WithMany("Members")
                        .HasForeignKey("TeamId1");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.Team", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("dz3Binary.DAL.Entities.User", b =>
                {
                    b.Navigation("ProjectsCreated");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
